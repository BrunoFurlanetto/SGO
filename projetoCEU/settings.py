"""
Django settings for projetoCEU project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
from pathlib import Path
from django.contrib.messages import constants

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-8e5qrlwbt$(uvb1yea)7r-!^=snfz)2wqa%^b^m4nw4^!#3+zz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1', '191.96.251.170', 'sgo.gperaltas.com.br']

MY_APP_DOMAIN = 'http://127.0.0.1:8000'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django_crontab',
    'reversion',
    'import_export',
    'home.apps.HomeConfig',
    'ceu.apps.CeuConfig',
    'peraltas.apps.PeraltasConfig',
    'dashboard.apps.DashboardConfig',
    'cadastro.apps.CadastroConfig',
    'escala.apps.EscalaConfig',
    'fichaAvaliacao.apps.FichaavaliacaoConfig',
    'painelAdm.apps.PaineladmConfig',
    'ordemDeServico.apps.OrdemdeservicoConfig',
    'calendarioEventos.apps.CalendarioeventosConfig',
    'detector.apps.DetectorConfig',
    'orcamento.apps.OrcamentoConfig',
    'painelDiretoria.apps.PaineldiretoriaConfig',
    'cozinha.apps.CozinhaConfig',
    'pesquisasSatisfacao.apps.PesquisassatisfacaoConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'reversion.middleware.RevisionMiddleware',
]

SESSION_EXPIRE_AT_BROWSER_CLOSE = True

ROOT_URLCONF = 'projetoCEU.urls'

LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'dashboard'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'libraries':  {
                'custom_filter_tag': 'cadastro.templatetags.custom_filter_tag',
                'custom_filter_tag_painel_diretoria': 'painelDiretoria.templatetags.custom_filter_tag_painel_diretoria',
                'custom_filter_tags': 'dashboard.templatetags.custom_filter_tags',
                'custom_tag': 'orcamento.templatestags.custom_tag',
                'custom_filter_tags_avaliacao': 'pesquisasSatisfacao.templatestags.filter_tags_avaliacao',
            }
        },
    },
]

WSGI_APPLICATION = 'projetoCEU.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'pt-BR'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_L10N = False

USE_TZ = True

DATE_INPUT_FORMATS = ['%Y-%m-%d', '%m/%d/%Y', '%d %B %Y']

DATE_FORMAT = 'd/m/Y'  # TODO: Verificar sempre como as datas est√£o ficando

TIME_FORMAT = 'H:i'

DATETIME_FORMAT = 'd/m/Y H:i'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'templates/static')
]
STATIC_ROOT = os.path.join('static')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = 'media/'

MESSAGE_TAGS = {
    constants.ERROR: 'alert alert-danger',
    constants.WARNING: 'alert alert-warning',
    constants.DEBUG: 'alert alert-info',
    constants.SUCCESS: 'alert alert-success',
    constants.INFO: 'alert alert-info',
}

try:
    from local_settings import *
except ImportError:
    ...

CRONJOBS = [
    ('0 07 * * *', 'peraltas.cron.atualizar_pagantes_ficha'),
    ('0 11 * * *', 'peraltas.cron.envio_dados_embarque'),
    ('0 06 * * *', 'peraltas.cron.atualizar_contagem_hotelaria')
]

if not DEBUG:
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'formatters': {
            'verbose': {
                'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
                'style': '{',
            },
            'simple': {
                'format': '{levelname} {message}',
                'style': '{',
            },
        },
        'handlers': {
            'file': {
                'level': 'ERROR',
                'class': 'logging.handlers.RotatingFileHandler',
                'filename': os.path.join(BASE_DIR, 'debug.log'),
                'maxBytes': 1024 * 1024 * 5,  # 5 MB
                'backupCount': 3,
                'formatter': 'verbose',
            }
        },
        'loggers': {
            'django': {
                'handlers': ['file'],
                'level': 'DEBUG',
                'propagate': True,
            },
        },
    }
