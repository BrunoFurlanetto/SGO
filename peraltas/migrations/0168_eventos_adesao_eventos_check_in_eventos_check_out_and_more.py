# Generated by Django 4.0.1 on 2024-05-31 20:56

from django.db import migrations, models
import django.db.models.deletion

from peraltas.models import FichaDeEvento


def preencher_campos(apps, schema_editor):
    Eventos = apps.get_model('peraltas', 'Eventos')
   
    for evento in Eventos.objects.all():
        ordem = evento.ordem_de_servico if evento.ordem_de_servico else None
        ficha = evento.ficha_de_evento
        eventos_passados = FichaDeEvento.objects.filter(cliente=ficha.cliente.id, os=True).order_by('check_in')
        veio_ano_anterior = False
        
        evento.colaborador = ficha.vendedora
        evento.cliente = ficha.cliente
        evento.check_in = ordem.check_in if ordem else ficha.check_in
        evento.check_out = ordem.check_out if ordem else ficha.check_out
        evento.qtd_previa = ficha.qtd_convidada if ficha.qtd_convidada else 0
        evento.data_preenchimento = ordem.data_preenchimento if ordem else ficha.data_preenchimento
        evento.codigo_pagamento = ficha.codigos_app.eficha if not ficha.pre_reserva else ''
        evento.produto_peraltas = ficha.produto
        evento.adesao = round(ficha.adesao) if ficha.adesao else 0.00

        if ordem:
            evento.tipo_evento = ordem.tipo
        else:
            if ficha.produto.colegio:
                evento.tipo_evento = 'Colégio'
            else:
                evento.tipo_evento = 'Empresa'

        if ordem:
            evento.dias_evento = (ordem.check_out.date() - ordem.check_in.date()).days
        else:
            evento.dias_evento = (ficha.check_out.date() - ficha.check_in.date()).days

        if ficha.produto_corporativo:
            evento.produto_corporativo = ficha.produto_corporativo

        if ordem:
            evento.estagio_evento = 'ordem_servico'
        else:
            if ficha.pre_reserva and not ficha.agendado:
                evento.estagio_evento = 'pre_reserva'
            elif ficha.pre_reserva and ficha.agendado:
                evento.estagio_evento = 'confirmado'
            else:
                evento.estagio_evento = 'ficha_evento'

        if ordem:
            evento.qtd_confirmado = ordem.n_participantes
        else:
            evento.qtd_confirmado = ficha.qtd_confirmada if ficha.qtd_confirmada else 0

        for evt in eventos_passados:
            if evt.check_in.year == ficha.check_in.year - 1:
                veio_ano_anterior = True

                break

        evento.veio_ano_anterior = veio_ano_anterior

        evento.save()


class Migration(migrations.Migration):

    dependencies = [
        ('peraltas', '0167_alter_escalaacampamento_options_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='eventos',
            name='adesao',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='eventos',
            name='check_in',
            field=models.DateTimeField(default='2024-01-01 00:00'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='eventos',
            name='check_out',
            field=models.DateTimeField(default='2024-01-01 23:59'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='eventos',
            name='cliente',
            field=models.ForeignKey(default=18, on_delete=django.db.models.deletion.CASCADE, to='peraltas.clientecolegio'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='eventos',
            name='codigo_pagamento',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='eventos',
            name='colaborador',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='peraltas.vendedor'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='eventos',
            name='data_preenchimento',
            field=models.DateField(default='2024-01-01'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='eventos',
            name='dias_evento',
            field=models.IntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='eventos',
            name='estagio_evento',
            field=models.CharField(choices=[('pre_reserva', 'Pré reserva'), ('confirmado', 'Evento confirmado'), ('ficha_evento', 'Ficha de evento'), ('ordem_servico', 'Ordem de serviço')], default='pre_reserva', max_length=25),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='eventos',
            name='produto_corporativo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='peraltas.produtocorporativo'),
        ),
        migrations.AddField(
            model_name='eventos',
            name='produto_peraltas',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='peraltas.produtosperaltas'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='eventos',
            name='qtd_confirmado',
            field=models.IntegerField(default=0),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='eventos',
            name='qtd_previa',
            field=models.IntegerField(default=0),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='eventos',
            name='tipo_evento',
            field=models.CharField(default='Colégio', max_length=25),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='eventos',
            name='veio_ano_anterior',
            field=models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], default=1),
            preserve_default=False,
        ),
        migrations.RunPython(preencher_campos),
    ]
